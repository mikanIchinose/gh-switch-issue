#!/usr/bin/env bash
set -e

# check dependencies {{{
if ! command -v gum &>/dev/null; then
  echo "gum is not exist"
  exit 0
fi
# }}}

# variable
baseBranch="develop"

# @type {number: number, title: string}[]
issueList=$(gh issue list --assignee "@me" --json title --json number --jq '.[] | [.number,.title] | join(" ")')
# @type number
selectedIssueNumber=$(echo "$issueList" | gum choose | awk '{print $1}')

test "$selectedIssueNumber" = "" && exit 0

isBranchExist=$(git for-each-ref --format="%(refname:short)" refs/heads | grep --quiet '^'feature/"$selectedIssueNumber"'$' && echo true || echo false)

if "$isBranchExist"; then
  gum confirm "git switch feature/$selectedIssueNumber?" && git switch feature/"$selectedIssueNumber"
else
  gum confirm "git switch -c feature/$selectedIssueNumber? $baseBranch" && git switch -c feature/"$selectedIssueNumber" "$baseBranch" || exit 0
  # initial commit for four-keys metrics
  gum confirm "git commit -n --allow-empty -m '対応開始'?" && git commit -n --allow-empty -m '対応開始' || exit 0
fi
